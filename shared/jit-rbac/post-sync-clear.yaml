apiVersion: batch/v1
kind: Job
metadata:
  name: argocd-jit-rbac-clear-role
  namespace: kube-system
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded,HookFailed
    argocd.argoproj.io/sync-wave: "99"
  labels:
    app.kubernetes.io/part-of: argo-jit-rbac
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 60
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: argo-jit-rbac
        jit-rbac/app: PLACEHOLDER
    spec:
      serviceAccountName: argocd-manager
      restartPolicy: Never
      containers:
      - name: clear-role
        image: bitnami/kubectl:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: JIT_RBAC_APP
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['jit-rbac/app']
        - name: ROLE_NAME
          value: "ROLE_NAME_PLACEHOLDER"
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -e
            echo "=== JIT RBAC PostSync: Clearing Role ===";
            echo "Application: ${JIT_RBAC_APP}";
            echo "Role: ${ROLE_NAME}";
            
            echo "Deleting ClusterRoleBinding";
            kubectl delete clusterrolebinding "${ROLE_NAME}-binding" --ignore-not-found=true;
            
            echo "Clearing ClusterRole ${ROLE_NAME} (patching to empty rules)";
            kubectl patch clusterrole "${ROLE_NAME}" --type=merge -p '{"rules":[]}';
            
            echo "Deleting completed PostSync pods";
            kubectl delete pod -n kube-system -l app.kubernetes.io/part-of=argo-jit-rbac,jit-rbac/app=${JIT_RBAC_APP} --field-selector=status.phase=Succeeded --ignore-not-found=true || true;
            
            echo "PostSync cleanup completed";
