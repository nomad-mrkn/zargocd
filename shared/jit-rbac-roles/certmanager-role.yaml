apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: certmanager-role
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
  labels:
    app.kubernetes.io/part-of: argo-jit-rbac
rules:
  # Cert-manager CRDs management
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "update", "patch", "get", "list", "watch"]
  
  # Cert-manager core resources
  - apiGroups: ["cert-manager.io"]
    resources:
      - certificates
      - certificaterequests
      - issuers
      - clusterissuers
      - certificaterequests/status
      - certificaterequests/finalizers
      - certificates/status
      - certificates/finalizers
      - clusterissuers/status
      - issuers/status
    verbs: ["create", "update", "patch", "get", "list", "watch", "delete"]
  
  # ACME challenge resources
  - apiGroups: ["acme.cert-manager.io"]
    resources:
      - orders
      - orders/status
      - orders/finalizers
      - challenges
      - challenges/status
      - challenges/finalizers
    verbs: ["create", "delete", "get", "list", "watch", "update", "patch"]
  
  # Kubernetes certificates API
  - apiGroups: ["certificates.k8s.io"]
    resources:
      - certificatesigningrequests
      - certificatesigningrequests/status
    verbs: ["get", "list", "watch", "update", "patch"]
  
  - apiGroups: ["certificates.k8s.io"]
    resources: ["signers"]
    verbs: ["sign"]
  
  # Cert-manager signers approval
  - apiGroups: ["cert-manager.io"]
    resources: ["signers"]
    verbs: ["approve"]
  
  # Gateway API (if used)
  - apiGroups: ["gateway.networking.k8s.io"]
    resources:
      - gateways
      - gateways/finalizers
      - httproutes
      - httproutes/finalizers
    verbs: ["get", "list", "watch", "update", "patch"]
  
  # Ingress finalizers
  - apiGroups: ["networking.k8s.io"]
    resources:
      - ingresses
      - ingresses/finalizers
    verbs: ["get", "list", "watch", "update", "patch"]
  
  # OpenShift routes (if applicable)
  - apiGroups: ["route.openshift.io"]
    resources: ["routes/custom-host"]
    verbs: ["create"]
  
  # Webhooks management
  - apiGroups: ["admissionregistration.k8s.io"]
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["create", "update", "patch", "get", "list", "watch", "delete"]
  
  # Core resources needed for cert-manager deployment
  - apiGroups: ["apps"]
    resources:
      - deployments
      - replicasets
    verbs: ["create", "update", "patch", "get", "list", "watch", "delete"]
  
  - apiGroups: [""]
    resources:
      - serviceaccounts
      - services
      - configmaps
      - secrets
      - pods
      - events
    verbs: ["create", "update", "patch", "get", "list", "watch", "delete"]
  
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["create", "get", "list", "watch"]
  
  - apiGroups: [""]
    resources: ["serviceaccounts/token"]
    verbs: ["create"]
  
  # RBAC for cert-manager service accounts
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources:
      - roles
      - rolebindings
      - clusterroles
      - clusterrolebindings
    verbs: ["create", "update", "patch", "get", "list", "watch", "delete"]
  
  # SubjectAccessReview for cert-manager
  - apiGroups: ["authorization.k8s.io"]
    resources: ["subjectaccessreviews"]
    verbs: ["create"]
  
  # Leases for leader election
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create", "update", "patch", "get", "list", "watch"]

  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["create", "delete", "list", "get", "watch", "update"]